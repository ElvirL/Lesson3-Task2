/*
Задание 2. Крестики-нолики
Что нужно сделать
Старая добрая игра на страницах всех школьных тетрадей. Поле размером 3 ? 3 представлено в виде двумерного массива с типом элементов char. 
Участвуют два игрока, они ходят по очереди и ставят в указанные ими в стандартном вводе координаты свой символ — X или O 
(буквы латинского алфавита). Как только у одного из игроков будет установлено подряд три крестика или три нолика, он побеждает. 
Если свободных клеток не осталось, а трёх совпадающих элементов не найдено, то объявляется ничья. Для простоты не будем 
рассматривать диагональные совпадения — только строго вертикальные и строго горизонтальные.
Изначально всё поле инициализируется символом пробела — ‘ ‘(для обозначения пробела кавычки одинарные и в одну сторону). 
Это можно сделать сразу при объявлении либо с помощью вложенного цикла. На каждом ходе при занятой клетке или при неверных 
координатах этой клетки должно быть выведено сообщение, и игрок должен указать координаты клетки повторно. После каждого хода надо 
выводить в консоль текущее состояние всего игрового поля для наглядности.

Советы и рекомендации
• Действия для обоих игроков одинаковые, отличаются только символом, который ставится на поле.
• Игровой цикл не должен быть бесконечным. Игра имеет определённое максимальное количество шагов.
• Не забывайте про случай ничьей.
• Как и в предыдущем задании, здесь будет удобно сразу заполнить массив значениями false. Количество мест, доступных для заполнения, 
заранее известно. В процессе заполнения из этой переменой нужно не забывать вычитать единицу. Чтобы отметить место как занятое, 
нужно лишь написать places[i][j] = true;.
• Проверку на победу игрока, которую надо осуществлять после каждого хода, можно сделать с помощью вложенного цикла, 
сразу проверяя и вертикаль, и горизонталь, а как именно — попробуйте догадаться сами.
• Здесь заранее известно число ходов — 3 * 3. Столько раз должен быть выполнен цикл, который спрашивает у очередного игрока координаты.
• Символ, который будет установлен в указанных координатах, можно на каждом шаге менять подобным образом:

if (gamer_name == 'X')
gamer_name = 'O';
else
gamer_name = 'X';
*/

#include <iostream>

using namespace std;

void print_table(char table[][3]){
    for (int i=0; i<3; ++i){
        for (int j=0; j<3; ++j){
            if (table[i][j] == ' ')
                cout << '-' << "\t";
            else
                cout << table[i][j]  << "\t";
        }
        cout << endl;
    
    }
}

bool check_winner_row(char table[][3]){
    int counter_x = 0;
    int counter_o = 0;
    for (int i=0; i<3; ++i){
        for (int j=0; j<3; ++j){
            if (table[i][j] == 'X')
                ++counter_x;
            else if (table[i][j] == 'O')
                ++counter_o;
        }
        if (counter_x == 3 || counter_o == 3)
            return true;
        
        counter_x = 0;
        counter_o = 0;
    }
    return false;
}

bool check_winner_column(char table[][3]){
    int counter_x = 0;
    int counter_o = 0;
    for (int i=0; i<3; ++i){
        for (int j=0; j<3; ++j){
            if (table[j][i] == 'X')
                ++counter_x;
            else if (table[j][i] == 'O')
                ++counter_o;
        }
        if (counter_x == 3 || counter_o == 3)
            return true;
        
        counter_x = 0;
        counter_o = 0;
    }
    return false;
}

int main(){
    setlocale(LC_ALL, "Russian");
    char game_table[3][3];
    for (int i=0; i<3; ++i){
        for (int j=0; j<3; ++j){
            game_table[i][j] = ' ';
        }
    }

    char gamer_name = 'X';
    int gamer_number = 1;
    int count_step = 0;
    int x,y;

    while (count_step<9){
        cout << "Игрок № " << gamer_number << " введите координаты через пробел: ";
        cin >> x >> y;
        if (x < 0 || x > 2 || y < 0 || y > 2){
            cout << "Координаты должны быть в пределах [0,2]!" << endl;
        } else if (game_table[x][y] != ' '){
            cout << "Данное поле уже заполнено!" << endl;
        } else {
            game_table[x][y] = gamer_name;
            print_table(game_table);
            cout << endl;
            if (check_winner_row(game_table) || check_winner_column(game_table)){
                cout << "Победил игрок №" << gamer_number;
                break;
            }

            if (gamer_name == 'X'){
                gamer_name = 'O';
                gamer_number = 2;
            }
            else {
                gamer_name = 'X';
                gamer_number = 1;
            }

            ++count_step;
        }
        if (count_step == 9)
            cout << "Ничья";
    }
    
}